Membrane ESB Change Log
=============================================================================

* [release] 4.0.1 (early access)

* [bugfixes] merged patches from 3.4.X and 3.5.X: small fixes in the admin
  console, several regarding IE8. Fixed fileExchangeStore file name pattern
  and added the attribute <webServer docBase="..." generateIndex="true" />
  which displays directory indexes when a directory is requested and docBase
  points to an actual directory.

* [release] 4.0.0 (early access)

* [changed behavior] [update config] [development]
  The monitor-beans.xml configuration file has been merged into proxies.xml .
  The file proxies.xml is now a normal Spring context configuration file,
  and Spring is used to parse this file and manage the lifecycle of Membrane
  ESB's main objects defined in this file.
  (Note that for proxies.xml hot deployment to work, the Spring context class
  needs to implement com.predic8.membrane.core.TrackingApplicationContext, as
  does, for example, the class TrackingFileSystemXmlApplicationContext. - This
  class is automatically used by Membrane ESB's standalone distribution.)
  
  Annotations and a annotation processor (defined in the new module
  membrane-esb-annot) are used to generate Membrane ESB's XML schema document
  for the proxies.xml language as well as the Java source for the parser
  classes required by Spring. The core language is defined in the namespace
  http://membrane-soa.org/proxies/1/ described by the XML schema document
  found at http://membrane-soa.org/schemas/proxies-1.xsd .
  
  Language extensions can easily be implemented using a new separate namespace
  using the same annotations, as does, for example, the membrane-esb-war
  module.

* [release] 3.5.8

* [enhancement] adminConsole: support old IE versions

* [release] 3.5.7

* [bugfix] handle LDAPUserDataProvider/@passwordAttribute in spring config
  correctly

* [release] 3.5.6

* [new] The <ssl> element in proxies.xml now has a new optional attribute
  (and default value) ignoreTimestampCheckFailure="false".

* [changed behavior] The rest2soap interceptor now ignores the "responseType"
  attribute to choose the response type (XML or JSON). Instead the HTTP
  "Accept" header is used: If "Accept: application/json" is set, JSON is
  produced.

* [improvement] the default log level is now INFO.

* [new] The <httpClient> element in conf/monitor-beans.xml has now two new 
  valid attributes (with default values): failOverOn5XX="false" and
  keepAliveTimeout="30000" 

* [update config] examples/rest2soap-json/strip-env.xsl was updated to remove
  the XML namespace prefixes (the JSON key 'ns1:getBank' is now 'getBank')

* [release] 3.5.5

* [bugfix] getBodyAsStream() now returns correct data for chunked
  transfer-encoding

* [release] 3.5.4

* [improvement] adminConsole and .war deployment (add-serviceProxy form)

* [bugfix] absolute MEMBRANE_HOME on Linux

* [bugfix] fixed shebang lines in Linux startup scripts

* [new] added serviceProxy/@ip to bind a socket only on a specific IP
  (for hosts with multiple IPs)

* [bugfix] keep-alive and custom interceptors: always read the request body
  before answering the request

* [bugfix] reduced memory leakage of any in-memory exchange store.

* [new] these previously mentioned changes allow Membrane to be used as a
  WebDAV (e.g. Subversion) proxy

* [update config] reverseProxying now rewrites an request "Destination"
  headers (see RFC 2518 section 9.3; also used by WebDAV). This requires
  the reverseProxying interceptor to be declared between the "dispatching"
  and "userFeature" interceptors in monitor-beans.xml, as is demonstrated
  by the sample config files.

* [bugfix] reverseProxying interceptor and HTTPS

* [new] regExReplacer can now also be used to change message headers using
  target="header"

* [new] LoginInterceptor authenticates users agains some UserDataProvider
  implementation (e.g. LDAP), verifies a token (for example sent via a text
  messaging service) and forwards authenticated requests to the backend.

* [release] 3.5.3

* [documentation] improved proxies.xml doc and custom-interceptor example

* [bugfix] in adminConsole: fixed access to RESTful resources when deployed
  in a J2EE container with a context path other than '/'
  
* [development improvement] automatically read message body from incoming
  HTTP connections before sending a response (this removes the requirement
  from terminating interceptors to do so)

* [improvement] accessControl: avoid unnecessary DNS lookups and use the
  DNSCache class for remaining ones

* [release] 3.5.2

* [documentation] For a more verbose explanation of the new rest2soap
  functionality see  
  http://httprouter.wordpress.com/2012/08/30/converting-json-rest-requests-to-soap/ .

* [update config] the rest2soap interceptor now uses the namespace
  http://membrane-soa.org/schemas/http/v1/ to identify the root element
  of the in-between XML document (called "<request>").
  (To upgrade from the usage of the old rest2soap interceptor, this means
  that you cannot use the XPath "/request" anymore in your XSLT documents:
  E.g. use "/*[local-name()='request']" instead. See blog post for example.)
    
* [new] the rest2soap interceptor integrates HTTP message bodies into the
  in-between XML document (the input for the request XSLT transformation).
  If the HTTP message body is XML formatted, the document is appended
  to the <body> node. If the message body is JSON formatted, it is first
  converted into XML and then appended.
  Also see the blog post mentioned above.
  
* [new] the rest2soap interceptor now allows to set response status code,
  message and headers from the XSLT document: if the response XSL
  transformation yields an XML document with a root element named "response"
  and with a namespace of http://membrane-soa.org/schemas/http/v1/ , this
  document will be processed and "unwrapped" to fill the response. See the
  response XSLT document in the blog post mentioned above for a sample 
  response XSLT using this new feature.

* [new example] versioning/xslt shows how SOAP Web Service versioning can
  be implemented using XSLT.

* [release] 3.5.1

* [documentation] new SOAP quick start guide uses <soapProxy>

* [update config] <path isRegExp="false">abc</path> in proxies.xml now means
  path.startsWith("abc") instead of path.contains("abc") - change it to
  <path isRegExp="true">.*\Qabc\E.*</path> if you actually want it to
  mean the latter.

* [bugfix] admin calls tab: also track responses without bodies

* [improvement] lots of small things in the admin interface

* [new] <urlNormalizer> interceptor can remove "/abc/../" parts from the
  URL path (caused by old HTTP clients not normalizing themselves)

* [bugfix] fixed regressions in logging-jdbc and SSL-* examples introduced
  in 3.5.0

* [release] 3.5.0

* [development] split parsing from initialization for all ServiceProxy and
  Interceptors objects. The back-reference to router is not known during
  parsing anymore.

* [new] tab "calls" in the admin console showing the last few requests with
  all their headers and bodys. storage is limited by default to 1MB.

* [bugfix] correctly handle repeated (background) init of GroovyInterceptor

* [new] added <soapProxy wsdl="..."> to avoid having to configure
  a "/services/service(|\?wsdl|\?xsd=.*)"-style regex on a
  SOAP <serviceProxy>.

* [bugfix] links on services index page use wrong port when running as
  servlet 

* [release] 3.4.3

* [usage improvement] servlet: port="..." is now ignored

* [usage improvement] standalone: if port="..." is missing, port="80" is
  used by default.

* [usage] Exchange properties of type String can be used from XSLT
  stylesheets

* [improvement] Groovy scripts are parsed only once at startup; only one
  instance of GroovyShell is used globally (improved performance and
  resource management)

* [bugfix] non-SOAP XML messages now cause validation errors in the WSDL
  validator

* [update config] The default servlet monitor-beans.xml configuration now
  removes HTTP headers which are managed by the web server ("Connection",
  "Content-Length", etc.)

* [usage improvement] The format of the error page for uncaught exceptions
  thrown from interceptors now depends on the request: For SOAP messages,
  SOAP faults are returned; for JSON requests, JSON error messages are
  returned; for XML requests, an XML error elements are returned. (eased
  parsing for clients)

* [new] added SoapOperationExtractor interceptor 

* [release] 3.4.2

* [update config] <validator wsdl="..." skipFaults="true" /> can be used
  to accept any SOAP Fault message body as valid (even if it is not valid
  by the WSDL's XSD schemas).

* [new] added wsdlPublisher interceptor (for backends that do not provide
  WSDLs on their own)

* [improvement] background initialization for XSLT transformers

* [usage improvement] track processing times for adminConsole

* [release] 3.4.1
